{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mi\\\\Desktop\\\\React project folder\\\\project-4\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useRef } from \"react/cjs/react.development\";\nimport InputField from \"../../UI/InputField\";\nimport classes from \"./MealItemForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealItemForm = props => {\n  _s();\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value; // it always return string value\n\n    const enteredAmountNumber = +enteredAmount; // change into int here by adding + sign\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setAmountIsValid(false);\n      amountInputRef.current.value = \"1\";\n      return;\n    }\n\n    props.onAddToCart(enteredAmountNumber);\n    amountInputRef.current.value = \"1\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(InputField, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: \"amount_\" + props.id,\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"+ Add \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"enter a valid number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealItemForm, \"49LGRK4jBiAcXkiYfsTkxzkpjmw=\");\n\n_c = MealItemForm;\nexport default MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["C:/Users/mi/Desktop/React project folder/project-4/src/components/Meals/MealItem/MealItemForm.js"],"names":["React","useState","useRef","InputField","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMQ,cAAc,GAAGP,MAAM,EAA7B;;AACA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,aAAa,GAAGJ,cAAc,CAACK,OAAf,CAAuBC,KAA7C,CAF+B,CAG/B;;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B,CAJ+B,CAK/B;;AACA,QACEA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAHxB,EAIE;AACAR,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,MAAAA,cAAc,CAACK,OAAf,CAAuBC,KAAvB,GAA+B,GAA/B;AACA;AACD;;AACDT,IAAAA,KAAK,CAACa,WAAN,CAAkBH,mBAAlB;AACAP,IAAAA,cAAc,CAACK,OAAf,CAAuBC,KAAvB,GAA+B,GAA/B;AACD,GAjBD;;AAkBA,sBACE;AAAM,IAAA,SAAS,EAAEX,OAAO,CAACgB,IAAzB;AAA+B,IAAA,QAAQ,EAAEV,aAAzC;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,GAAG,EAAED,cADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLY,QAAAA,EAAE,EAAE,YAAYf,KAAK,CAACe,EADjB;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcG,CAACnB,aAAD,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxCD;;GAAMF,Y;;KAAAA,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useRef } from \"react/cjs/react.development\";\r\nimport InputField from \"../../UI/InputField\";\r\nimport classes from \"./MealItemForm.module.css\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n\r\n  const amountInputRef = useRef();\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredAmount = amountInputRef.current.value;\r\n    // it always return string value\r\n    const enteredAmountNumber = +enteredAmount;\r\n    // change into int here by adding + sign\r\n    if (\r\n      enteredAmount.trim().length === 0 ||\r\n      enteredAmountNumber < 1 ||\r\n      enteredAmountNumber > 5\r\n    ) {\r\n      setAmountIsValid(false);\r\n      amountInputRef.current.value = \"1\";\r\n      return;\r\n    }\r\n    props.onAddToCart(enteredAmountNumber);\r\n    amountInputRef.current.value = \"1\";\r\n  };\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      <InputField\r\n        ref={amountInputRef}\r\n        label=\"Amount\"\r\n        input={{\r\n          id: \"amount_\" + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"5\",\r\n          step: \"1\",\r\n          defaultValue: \"1\",\r\n        }}\r\n      />\r\n      <button type=\"submit\">+ Add </button>\r\n      {!amountIsValid && <p>enter a valid number</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n"]},"metadata":{},"sourceType":"module"}